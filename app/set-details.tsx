import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  FlatList,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useLocalSearchParams, router } from 'expo-router';\nimport { \n  ArrowLeft, \n  Search,\n  Filter,\n  Grid3X3,\n  List,\n  Star,\n  TrendingUp,\n  Eye,\n  EyeOff,\n  Zap,\n  Trophy\n} from 'lucide-react-native';\n\nconst { width } = Dimensions.get('window');\n\n// Mock card data\nconst cardData = {\n  'scarlet-violet-base': {\n    name: 'Scarlet & Violet Base Set',\n    code: 'SVI',\n    gradient: ['#FFD700', '#FFA500'],\n    cards: [\n      {\n        id: 'svi-001',\n        name: 'Sprigatito',\n        number: '001',\n        rarity: 'Common',\n        type: 'Grass',\n        price: 0.25,\n        priceChange: '+5.2%',\n        owned: true,\n        quantity: 3,\n        condition: 'Near Mint',\n        imageUrl: 'placeholder'\n      },\n      {\n        id: 'svi-025',\n        name: 'Pikachu ex',\n        number: '025',\n        rarity: 'Double Rare',\n        type: 'Lightning',\n        price: 15.99,\n        priceChange: '+12.8%',\n        owned: true,\n        quantity: 1,\n        condition: 'Mint',\n        imageUrl: 'placeholder'\n      },\n      {\n        id: 'svi-198',\n        name: 'Charizard ex',\n        number: '198',\n        rarity: 'Special Illustration Rare',\n        type: 'Fire',\n        price: 89.99,\n        priceChange: '-3.4%',\n        owned: false,\n        quantity: 0,\n        condition: null,\n        imageUrl: 'placeholder'\n      },\n      {\n        id: 'svi-086',\n        name: 'Gardevior ex',\n        number: '086',\n        rarity: 'Ultra Rare',\n        type: 'Psychic',\n        price: 24.50,\n        priceChange: '+8.1%',\n        owned: true,\n        quantity: 2,\n        condition: 'Lightly Played',\n        imageUrl: 'placeholder'\n      },\n      {\n        id: 'svi-157',\n        name: 'Professor Sada',\n        number: '157',\n        rarity: 'Rare',\n        type: 'Trainer',\n        price: 3.25,\n        priceChange: '+15.6%',\n        owned: false,\n        quantity: 0,\n        condition: null,\n        imageUrl: 'placeholder'\n      },\n      {\n        id: 'svi-072',\n        name: 'Annihilape ex',\n        number: '072',\n        rarity: 'Double Rare',\n        type: 'Fighting',\n        price: 12.75,\n        priceChange: '-7.2%',\n        owned: true,\n        quantity: 1,\n        condition: 'Near Mint',\n        imageUrl: 'placeholder'\n      }\n    ]\n  }\n};\n\nconst rarityColors = {\n  'Common': '#9CA3AF',\n  'Uncommon': '#10B981',\n  'Rare': '#3B82F6',\n  'Double Rare': '#8B5CF6',\n  'Ultra Rare': '#F59E0B',\n  'Special Illustration Rare': '#EF4444',\n  'Hyper Rare': '#EC4899'\n};\n\nconst typeColors = {\n  'Grass': '#22C55E',\n  'Fire': '#EF4444',\n  'Water': '#3B82F6',\n  'Lightning': '#F59E0B',\n  'Psychic': '#8B5CF6',\n  'Fighting': '#DC2626',\n  'Darkness': '#374151',\n  'Metal': '#6B7280',\n  'Fairy': '#EC4899',\n  'Dragon': '#7C3AED',\n  'Colorless': '#9CA3AF',\n  'Trainer': '#6366F1'\n};\n\nexport default function SetDetails() {\n  const { gameId, setId } = useLocalSearchParams();\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [showOwned, setShowOwned] = useState<'all' | 'owned' | 'missing'>('all');\n  const [sortBy, setSortBy] = useState<'number' | 'name' | 'rarity' | 'price'>('number');\n  \n  const setData = cardData[setId as keyof typeof cardData];\n  \n  if (!setData) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text>Set not found</Text>\n      </SafeAreaView>\n    );\n  }\n\n  // Filter and sort cards\n  let filteredCards = setData.cards;\n  \n  if (showOwned === 'owned') {\n    filteredCards = filteredCards.filter(card => card.owned);\n  } else if (showOwned === 'missing') {\n    filteredCards = filteredCards.filter(card => !card.owned);\n  }\n\n  const sortedCards = [...filteredCards].sort((a, b) => {\n    switch (sortBy) {\n      case 'name':\n        return a.name.localeCompare(b.name);\n      case 'rarity':\n        const rarityOrder = ['Common', 'Uncommon', 'Rare', 'Double Rare', 'Ultra Rare', 'Special Illustration Rare', 'Hyper Rare'];\n        return rarityOrder.indexOf(b.rarity) - rarityOrder.indexOf(a.rarity);\n      case 'price':\n        return b.price - a.price;\n      default:\n        return parseInt(a.number) - parseInt(b.number);\n    }\n  });\n\n  const handleCardPress = (cardId: string) => {\n    router.push(`/card-details?gameId=${gameId}&setId=${setId}&cardId=${cardId}`);\n  };\n\n  const ownedCards = setData.cards.filter(card => card.owned).length;\n  const totalCards = setData.cards.length;\n  const totalValue = setData.cards.filter(card => card.owned).reduce((sum, card) => sum + (card.price * card.quantity), 0);\n  const completion = Math.round((ownedCards / totalCards) * 100);\n\n  const renderGridCard = ({ item: card }: { item: any }) => (\n    <TouchableOpacity \n      style={[styles.gridCard, !card.owned && styles.gridCardMissing]}\n      onPress={() => handleCardPress(card.id)}\n    >\n      <View style={styles.cardImageContainer}>\n        <View style={[styles.cardImagePlaceholder, { backgroundColor: typeColors[card.type] || '#9CA3AF' }]}>\n          <Text style={styles.cardNumber}>#{card.number}</Text>\n        </View>\n        {!card.owned && (\n          <View style={styles.missingOverlay}>\n            <EyeOff size={20} color=\"#FFFFFF\" />\n          </View>\n        )}\n        {card.quantity > 1 && (\n          <View style={styles.quantityBadge}>\n            <Text style={styles.quantityBadgeText}>{card.quantity}x</Text>\n          </View>\n        )}\n      </View>\n      \n      <View style={styles.cardInfo}>\n        <Text style={styles.cardName} numberOfLines={2}>{card.name}</Text>\n        <View style={[styles.rarityBadge, { backgroundColor: rarityColors[card.rarity] || '#9CA3AF' }]}>\n          <Text style={styles.rarityText}>{card.rarity}</Text>\n        </View>\n        <Text style={styles.cardPrice}>${card.price}</Text>\n        <View style={styles.priceChange}>\n          <TrendingUp size={12} color={card.priceChange.startsWith('+') ? '#10B981' : '#EF4444'} />\n          <Text style={[styles.priceChangeText, { color: card.priceChange.startsWith('+') ? '#10B981' : '#EF4444' }]}>\n            {card.priceChange}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderListCard = ({ item: card }: { item: any }) => (\n    <TouchableOpacity \n      style={[styles.listCard, !card.owned && styles.listCardMissing]}\n      onPress={() => handleCardPress(card.id)}\n    >\n      <View style={styles.listCardLeft}>\n        <View style={[styles.listCardImage, { backgroundColor: typeColors[card.type] || '#9CA3AF' }]}>\n          <Text style={styles.listCardNumber}>#{card.number}</Text>\n          {!card.owned && (\n            <View style={styles.listMissingOverlay}>\n              <EyeOff size={16} color=\"#FFFFFF\" />\n            </View>\n          )}\n        </View>\n        \n        <View style={styles.listCardInfo}>\n          <Text style={styles.listCardName}>{card.name}</Text>\n          <View style={styles.listCardMeta}>\n            <View style={[styles.listRarityBadge, { backgroundColor: rarityColors[card.rarity] || '#9CA3AF' }]}>\n              <Text style={styles.listRarityText}>{card.rarity}</Text>\n            </View>\n            <Text style={styles.listCardType}>{card.type}</Text>\n            {card.owned && card.quantity > 1 && (\n              <Text style={styles.listQuantity}>{card.quantity}x owned</Text>\n            )}\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.listCardRight}>\n        <Text style={styles.listCardPrice}>${card.price}</Text>\n        <View style={styles.listPriceChange}>\n          <TrendingUp size={12} color={card.priceChange.startsWith('+') ? '#10B981' : '#EF4444'} />\n          <Text style={[styles.listPriceChangeText, { color: card.priceChange.startsWith('+') ? '#10B981' : '#EF4444' }]}>\n            {card.priceChange}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity \n          style={styles.backButton}\n          onPress={() => router.back()}\n        >\n          <ArrowLeft size={24} color=\"#111827\" />\n        </TouchableOpacity>\n        <View style={styles.headerCenter}>\n          <Text style={styles.headerTitle}>{setData.name}</Text>\n          <Text style={styles.headerSubtitle}>{setData.code}</Text>\n        </View>\n        <TouchableOpacity style={styles.searchButton}>\n          <Search size={24} color=\"#6366F1\" />\n        </TouchableOpacity>\n      </View>\n\n      {/* Set Overview */}\n      <LinearGradient\n        colors={setData.gradient}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.overviewCard}\n      >\n        <View style={styles.overviewStats}>\n          <View style={styles.overviewStat}>\n            <Text style={styles.overviewStatValue}>{ownedCards}/{totalCards}</Text>\n            <Text style={styles.overviewStatLabel}>Cards Collected</Text>\n          </View>\n          <View style={styles.overviewStat}>\n            <Text style={styles.overviewStatValue}>${totalValue.toFixed(2)}</Text>\n            <Text style={styles.overviewStatLabel}>Collection Value</Text>\n          </View>\n          <View style={styles.overviewStat}>\n            <Text style={styles.overviewStatValue}>{completion}%</Text>\n            <Text style={styles.overviewStatLabel}>Complete</Text>\n          </View>\n        </View>\n        \n        <View style={styles.completionBar}>\n          <View style={styles.completionBarBackground}>\n            <View \n              style={[\n                styles.completionBarFill,\n                { width: `${completion}%` }\n              ]}\n            />\n          </View>\n        </View>\n      </LinearGradient>\n\n      {/* Controls */}\n      <View style={styles.controls}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.filterScroll}>\n          <TouchableOpacity \n            style={[styles.filterButton, showOwned === 'all' && styles.filterButtonActive]}\n            onPress={() => setShowOwned('all')}\n          >\n            <Text style={[styles.filterButtonText, showOwned === 'all' && styles.filterButtonTextActive]}>All Cards</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.filterButton, showOwned === 'owned' && styles.filterButtonActive]}\n            onPress={() => setShowOwned('owned')}\n          >\n            <Text style={[styles.filterButtonText, showOwned === 'owned' && styles.filterButtonTextActive]}>Owned</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.filterButton, showOwned === 'missing' && styles.filterButtonActive]}\n            onPress={() => setShowOwned('missing')}\n          >\n            <Text style={[styles.filterButtonText, showOwned === 'missing' && styles.filterButtonTextActive]}>Missing</Text>\n          </TouchableOpacity>\n          \n          <View style={styles.filterDivider} />\n          \n          <TouchableOpacity \n            style={[styles.filterButton, sortBy === 'number' && styles.filterButtonActive]}\n            onPress={() => setSortBy('number')}\n          >\n            <Text style={[styles.filterButtonText, sortBy === 'number' && styles.filterButtonTextActive]}>#</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.filterButton, sortBy === 'name' && styles.filterButtonActive]}\n            onPress={() => setSortBy('name')}\n          >\n            <Text style={[styles.filterButtonText, sortBy === 'name' && styles.filterButtonTextActive]}>Name</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.filterButton, sortBy === 'rarity' && styles.filterButtonActive]}\n            onPress={() => setSortBy('rarity')}\n          >\n            <Text style={[styles.filterButtonText, sortBy === 'rarity' && styles.filterButtonTextActive]}>Rarity</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.filterButton, sortBy === 'price' && styles.filterButtonActive]}\n            onPress={() => setSortBy('price')}\n          >\n            <Text style={[styles.filterButtonText, sortBy === 'price' && styles.filterButtonTextActive]}>Price</Text>\n          </TouchableOpacity>\n        </ScrollView>\n        \n        <View style={styles.viewControls}>\n          <TouchableOpacity \n            style={[styles.viewButton, viewMode === 'grid' && styles.viewButtonActive]}\n            onPress={() => setViewMode('grid')}\n          >\n            <Grid3X3 size={20} color={viewMode === 'grid' ? '#FFFFFF' : '#6B7280'} />\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.viewButton, viewMode === 'list' && styles.viewButtonActive]}\n            onPress={() => setViewMode('list')}\n          >\n            <List size={20} color={viewMode === 'list' ? '#FFFFFF' : '#6B7280'} />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Cards List */}\n      <FlatList\n        data={sortedCards}\n        renderItem={viewMode === 'grid' ? renderGridCard : renderListCard}\n        numColumns={viewMode === 'grid' ? 2 : 1}\n        key={viewMode}\n        contentContainerStyle={styles.cardsList}\n        showsVerticalScrollIndicator={false}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 10,\n    paddingBottom: 20,\n  },\n  backButton: {\n    width: 44,\n    height: 44,\n    borderRadius: 12,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  headerCenter: {\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#111827',\n  },\n  headerSubtitle: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginTop: 2,\n  },\n  searchButton: {\n    width: 44,\n    height: 44,\n    borderRadius: 12,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  overviewCard: {\n    marginHorizontal: 20,\n    borderRadius: 20,\n    padding: 24,\n    marginBottom: 20,\n  },\n  overviewStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  overviewStat: {\n    alignItems: 'center',\n  },\n  overviewStatValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  overviewStatLabel: {\n    fontSize: 12,\n    color: '#FFFFFF',\n    opacity: 0.8,\n    marginTop: 2,\n    textAlign: 'center',\n  },\n  completionBar: {\n    marginTop: 12,\n  },\n  completionBarBackground: {\n    height: 6,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: 3,\n    overflow: 'hidden',\n  },\n  completionBarFill: {\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 3,\n  },\n  controls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16,\n  },\n  filterScroll: {\n    flex: 1,\n    marginRight: 12,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 8,\n    marginRight: 8,\n    backgroundColor: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n  },\n  filterButtonActive: {\n    backgroundColor: '#6366F1',\n    borderColor: '#6366F1',\n  },\n  filterButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: '#6B7280',\n  },\n  filterButtonTextActive: {\n    color: '#FFFFFF',\n  },\n  filterDivider: {\n    width: 1,\n    height: 20,\n    backgroundColor: '#E5E7EB',\n    marginHorizontal: 8,\n  },\n  viewControls: {\n    flexDirection: 'row',\n  },\n  viewButton: {\n    width: 36,\n    height: 36,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n    backgroundColor: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n  },\n  viewButtonActive: {\n    backgroundColor: '#6366F1',\n    borderColor: '#6366F1',\n  },\n  cardsList: {\n    paddingHorizontal: 20,\n    paddingBottom: 40,\n  },\n  // Grid styles\n  gridCard: {\n    width: (width - 60) / 2,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 16,\n    padding: 12,\n    marginBottom: 16,\n    marginRight: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  gridCardMissing: {\n    opacity: 0.6,\n  },\n  cardImageContainer: {\n    position: 'relative',\n    marginBottom: 8,\n  },\n  cardImagePlaceholder: {\n    width: '100%',\n    height: 100,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardNumber: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  missingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  quantityBadge: {\n    position: 'absolute',\n    top: 6,\n    right: 6,\n    backgroundColor: '#10B981',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 10,\n  },\n  quantityBadgeText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  cardInfo: {\n    alignItems: 'center',\n  },\n  cardName: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#111827',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  rarityBadge: {\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 8,\n    marginBottom: 4,\n  },\n  rarityText: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  cardPrice: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#111827',\n    marginBottom: 2,\n  },\n  priceChange: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  priceChangeText: {\n    fontSize: 10,\n    fontWeight: '500',\n    marginLeft: 4,\n  },\n  // List styles\n  listCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 16,\n    padding: 16,\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  listCardMissing: {\n    opacity: 0.6,\n  },\n  listCardLeft: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  listCardImage: {\n    width: 50,\n    height: 70,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n    position: 'relative',\n  },\n  listCardNumber: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  listMissingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  listCardInfo: {\n    flex: 1,\n  },\n  listCardName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#111827',\n    marginBottom: 4,\n  },\n  listCardMeta: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  listRarityBadge: {\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 8,\n    marginRight: 8,\n    marginBottom: 2,\n  },\n  listRarityText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  listCardType: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginRight: 8,\n    marginBottom: 2,\n  },\n  listQuantity: {\n    fontSize: 12,\n    color: '#10B981',\n    fontWeight: '500',\n    marginBottom: 2,\n  },\n  listCardRight: {\n    alignItems: 'flex-end',\n  },\n  listCardPrice: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#111827',\n    marginBottom: 4,\n  },\n  listPriceChange: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  listPriceChangeText: {\n    fontSize: 12,\n    fontWeight: '500',\n    marginLeft: 4,\n  },\n});"